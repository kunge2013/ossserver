<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.kframe</groupId>
	<artifactId>ossbase</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name> ossbase </name>
	<description>common包</description>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.5.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	
	<properties>
		<output.dependence.file.path>lib/</output.dependence.file.path>
		<output.resource.file.path>resource/</output.resource.file.path>
	</properties>
	
	<dependencies>

		<!--security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<!-- jpa 依赖配置-->
		<dependency>
	    <groupId>org.springframework.boot</groupId>
	    	<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!--  swagger2 -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.6.1</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.6.1</version>
		</dependency>
		
		 <!--fastjson数据配置start-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.83</version>
        </dependency>
        
	</dependencies>
	
	
	<build>
		<plugins>
		
		 <!-- 打JAR包，不包含依赖文件；显式剔除配置文件 -->
	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-jar-plugin</artifactId>
		<configuration>
			<!--不打包资源文件，剔除配置文件-->
			<excludes>
				<exclude>*.**</exclude>
				<exclude>*/*.xml</exclude>
				<exclude>*.properties</exclude>
               <exclude>*.yml</exclude>
               <exclude>*/*.properties</exclude>
               <exclude>*/*.yml</exclude>
			</excludes>
			<!-- <archive>
				<manifest>
					将classpath添加到依赖描述
					<addClasspath>true</addClasspath>
					MANIFEST.MF 中 Class-Path 加入前缀
					 lib文件夹内容，需要 maven-dependency-plugin插件补充
					<classpathPrefix>lib/</classpathPrefix>
					jar包不包含唯一版本标识
					<useUniqueVersions>false</useUniqueVersions>
					指定入口类
					<mainClass>com.kframe.auth.OssApplication</mainClass>
				</manifest>
				<manifestEntries>
					MANIFEST.MF 中 Class-Path 加入资源文件目录，加入自定义路径，多个路径用空格隔开
					此处resources文件夹的内容，需要maven-resources-plugin插件补充上
					<Class-Path>./resources/</Class-Path>
				</manifestEntries>
			</archive> -->
			<outputDirectory>${project.build.directory}</outputDirectory>
		</configuration>
	</plugin>

	<!--拷贝依赖 copy-dependencies-->
	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-dependency-plugin</artifactId>
		<executions>
			<execution>
				<id>copy-dependencies</id>
				<phase>package</phase>
				<goals>
					<goal>copy-dependencies</goal>
				</goals>
				<configuration>
					<outputDirectory>
						${project.build.directory}/lib/
					</outputDirectory>
				</configuration>
			</execution>
		</executions>
	</plugin>

	<!--拷贝资源文件 copy-resources-->
	<plugin>
		<artifactId>maven-resources-plugin</artifactId>
		<executions>
			<execution>
				<id>copy-resources</id>
				<phase>package</phase>
				<goals>
					<goal>copy-resources</goal>
				</goals>
				<configuration>
					<resources>
						<resource>
							<directory>src/main/resources</directory>
							 <includes>
                           <include>*.properties</include>
                           <include>*.yml</include>
                           <include>*/*.properties</include>
                           <include>*/*.properties</include>
                        </includes>
						</resource>
					</resources>
					<outputDirectory>${project.build.directory}/resources</outputDirectory>
				</configuration>
			</execution>
		</executions>
	</plugin>

	<!--spring boot repackage，依赖 maven-jar-plugin 打包的jar包 重新打包成 spring boot 的jar包-->
	<!--maven打包时，跳过测试-->
      <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-surefire-plugin</artifactId>
         <configuration>
            <skip>true</skip>
         </configuration>
      </plugin>
      
		</plugins>
	</build>
	
</project>
